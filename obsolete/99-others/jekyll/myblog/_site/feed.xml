<?xml version="1.0" encoding="utf-8"?><feed xmlns="http://www.w3.org/2005/Atom" ><generator uri="https://jekyllrb.com/" version="4.0.0">Jekyll</generator><link href="http://0.0.0.0:4000/feed.xml" rel="self" type="application/atom+xml" /><link href="http://0.0.0.0:4000/" rel="alternate" type="text/html" /><updated>2019-10-17T15:45:59+08:00</updated><id>http://0.0.0.0:4000/feed.xml</id><title type="html">Your awesome title</title><subtitle>Write an awesome description for your new site here. You can edit this line in _config.yml. It will appear in your document head meta (for Google search results) and in your feed.xml site description.</subtitle><entry><title type="html">Welcome to Jekyll!</title><link href="http://0.0.0.0:4000/jekyll/update/2019/10/16/welcome-to-jekyll.html" rel="alternate" type="text/html" title="Welcome to Jekyll!" /><published>2019-10-16T14:03:54+08:00</published><updated>2019-10-16T14:03:54+08:00</updated><id>http://0.0.0.0:4000/jekyll/update/2019/10/16/welcome-to-jekyll</id><content type="html" xml:base="http://0.0.0.0:4000/jekyll/update/2019/10/16/welcome-to-jekyll.html">&lt;p&gt;You’ll find this post in your &lt;code class=&quot;highlighter-rouge&quot;&gt;_posts&lt;/code&gt; directory. Go ahead and edit it and re-build the site to see your changes. You can rebuild the site in many different ways, but the most common way is to run &lt;code class=&quot;highlighter-rouge&quot;&gt;jekyll serve&lt;/code&gt;, which launches a web server and auto-regenerates your site when a file is updated.&lt;/p&gt;

&lt;p&gt;Jekyll requires blog post files to be named according to the following format:&lt;/p&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;YEAR-MONTH-DAY-title.MARKUP&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;Where &lt;code class=&quot;highlighter-rouge&quot;&gt;YEAR&lt;/code&gt; is a four-digit number, &lt;code class=&quot;highlighter-rouge&quot;&gt;MONTH&lt;/code&gt; and &lt;code class=&quot;highlighter-rouge&quot;&gt;DAY&lt;/code&gt; are both two-digit numbers, and &lt;code class=&quot;highlighter-rouge&quot;&gt;MARKUP&lt;/code&gt; is the file extension representing the format used in the file. After that, include the necessary front matter. Take a look at the source for this post to get an idea about how it works.&lt;/p&gt;

&lt;p&gt;Jekyll also offers powerful support for code snippets:&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-ruby&quot; data-lang=&quot;ruby&quot;&gt;&lt;span class=&quot;k&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;print_hi&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
  &lt;span class=&quot;nb&quot;&gt;puts&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;Hi, &lt;/span&gt;&lt;span class=&quot;si&quot;&gt;#{&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;si&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;print_hi&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'Tom'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;#=&amp;gt; prints 'Hi, Tom' to STDOUT.&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;Check out the &lt;a href=&quot;https://jekyllrb.com/docs/home&quot;&gt;Jekyll docs&lt;/a&gt; for more info on how to get the most out of Jekyll. File all bugs/feature requests at &lt;a href=&quot;https://github.com/jekyll/jekyll&quot;&gt;Jekyll’s GitHub repo&lt;/a&gt;. If you have questions, you can ask them on &lt;a href=&quot;https://talk.jekyllrb.com/&quot;&gt;Jekyll Talk&lt;/a&gt;.&lt;/p&gt;</content><author><name></name></author><summary type="html">You’ll find this post in your _posts directory. Go ahead and edit it and re-build the site to see your changes. You can rebuild the site in many different ways, but the most common way is to run jekyll serve, which launches a web server and auto-regenerates your site when a file is updated.</summary></entry><entry><title type="html">jekyll</title><link href="http://0.0.0.0:4000/language/2019/10/15/jekyll.html" rel="alternate" type="text/html" title="jekyll" /><published>2019-10-15T06:18:54+08:00</published><updated>2019-10-15T06:18:54+08:00</updated><id>http://0.0.0.0:4000/language/2019/10/15/jekyll</id><content type="html" xml:base="http://0.0.0.0:4000/language/2019/10/15/jekyll.html">&lt;p&gt;Jekyll 是一个简单的博客形态的静态站点生产机器。它有一个模版目录，其中包含原始文本格式的文档，通过一个转换器（如 &lt;a href=&quot;http://daringfireball.net/projects/markdown/&quot;&gt;Markdown&lt;/a&gt;）和我们的 &lt;a href=&quot;https://github.com/Shopify/liquid/wiki&quot;&gt;Liquid&lt;/a&gt; 渲染器转化成一个完整的可发布的静态网站，你可以发布在任何你喜爱的服务器上。Jekyll 也可以运行在 &lt;a href=&quot;http://pages.github.com/&quot;&gt;GitHub Page&lt;/a&gt; 上，也就是说，你可以使用 GitHub 的服务来搭建你的项目页面、博客或者网站，而且是&lt;strong&gt;完全免费&lt;/strong&gt;的。&lt;/p&gt;

&lt;h1 id=&quot;1-入门&quot;&gt;1. 入门&lt;/h1&gt;

&lt;h2 id=&quot;11-安装&quot;&gt;1.1 安装&lt;/h2&gt;

&lt;h3 id=&quot;111-jekyll&quot;&gt;1.11 Jekyll&lt;/h3&gt;

&lt;h4 id=&quot;手动安装&quot;&gt;&lt;a href=&quot;https://www.jekyll.com.cn/docs/&quot;&gt;手动安装&lt;/a&gt;&lt;/h4&gt;

&lt;ol&gt;
  &lt;li&gt;
    &lt;p&gt;安装一个完整的 &lt;a href=&quot;ruby.md&quot;&gt;Ruby 开发环境&lt;/a&gt;&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;安装 Jekyll 和&lt;a href=&quot;https://www.jekyll.com.cn/docs/ruby-101/#bundler&quot;&gt;bundler&lt;/a&gt; &lt;a href=&quot;https://www.jekyll.com.cn/docs/ruby-101/#gems&quot;&gt;gems&lt;/a&gt;&lt;/p&gt;

    &lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;gem install jekyll bundler  --http-proxy $http_proxy
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;    &lt;/div&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;在./myblog目录下创建一个全新的 Jekyll 网站&lt;/p&gt;

    &lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;jekyll new myblog
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;    &lt;/div&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;进入新创建的目录&lt;/p&gt;

    &lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;cd myblog
echo  &amp;gt;&amp;gt; _config.yml
echo host: 0.0.0.0 &amp;gt;&amp;gt; _config.yml
echo port: 4000    &amp;gt;&amp;gt; _config.yml
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;    &lt;/div&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;构建网站并启动一个本地 web服务&lt;/p&gt;

    &lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;bundle exec jekyll serve
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;    &lt;/div&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;在浏览器中打开 &lt;a href=&quot;http://localhost:4000/&quot;&gt;http://localhost:4000&lt;/a&gt; 网址&lt;/p&gt;
  &lt;/li&gt;
&lt;/ol&gt;

&lt;h4 id=&quot;docker安装&quot;&gt;&lt;a href=&quot;https://github.com/envygeeks/jekyll-docker/blob/master/README.md&quot;&gt;Docker安装&lt;/a&gt;&lt;/h4&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;mkdir -p docker-myblog
mkdir -p docker-myblog/vendor/bundle
cd docker-myblog
echo host: 0.0.0.0 &amp;gt; _config.yml
echo port: 4000    &amp;gt;&amp;gt; _config.yml

docker run  \
  --volume=&quot;$PWD:/srv/jekyll&quot; \
  --volume=&quot;$PWD/vendor/bundle:/usr/local/bundle&quot; \
  -it jekyll/jekyll:latest \
  jekyll build
  
docker run -d \
  --volume=&quot;$PWD:/srv/jekyll&quot; \
  --volume=&quot;$PWD/vendor/bundle:/usr/local/bundle&quot; \
  -it jekyll/jekyll:latest \
  jekyll build  
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h2 id=&quot;tutorial&quot;&gt;&lt;a href=&quot;https://jekyllrb.com/tutorials/home/&quot;&gt;Tutorial&lt;/a&gt;&lt;/h2&gt;</content><author><name>Xu Jian</name></author><summary type="html">Jekyll 是一个简单的博客形态的静态站点生产机器。它有一个模版目录，其中包含原始文本格式的文档，通过一个转换器（如 Markdown）和我们的 Liquid 渲染器转化成一个完整的可发布的静态网站，你可以发布在任何你喜爱的服务器上。Jekyll 也可以运行在 GitHub Page 上，也就是说，你可以使用 GitHub 的服务来搭建你的项目页面、博客或者网站，而且是完全免费的。</summary></entry><entry><title type="html">记笔记</title><link href="http://0.0.0.0:4000/others/2019/06/24/take_notes_ppt.html" rel="alternate" type="text/html" title="记笔记" /><published>2019-06-24T05:35:46+08:00</published><updated>2019-06-24T05:35:46+08:00</updated><id>http://0.0.0.0:4000/others/2019/06/24/take_notes_ppt</id><content type="html" xml:base="http://0.0.0.0:4000/others/2019/06/24/take_notes_ppt.html">&lt;!-- page_number: true --&gt;

&lt;h1 id=&quot;记笔记&quot;&gt;记笔记&lt;/h1&gt;

&lt;h6 id=&quot;created-by-xu-jian&quot;&gt;Created by Xu Jian&lt;/h6&gt;
&lt;h6 id=&quot;may-2019&quot;&gt;May, 2019&lt;/h6&gt;

&lt;p&gt;&lt;img src=&quot;image/pexels-photo-373076.jpeg&quot; alt=&quot;bg&quot; /&gt;&lt;/p&gt;

&lt;hr /&gt;

&lt;h1 id=&quot;前言&quot;&gt;前言&lt;/h1&gt;

&lt;p&gt;作为一个技术宅，很喜欢学习一些自己感兴趣的技术，在学习的过程中，深感记笔记非常的重要。&lt;/p&gt;

&lt;hr /&gt;

&lt;h1 id=&quot;笔记&quot;&gt;笔记&lt;/h1&gt;

&lt;p&gt;笔记记得好，即使过上几年，再次翻看，还能记忆犹新。&lt;/p&gt;

&lt;hr /&gt;

&lt;h2 id=&quot;笔记类别&quot;&gt;笔记类别&lt;/h2&gt;

&lt;p&gt;从程序员的眼中，笔记可以分为：&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;信息：任何你想记录的&lt;/li&gt;
  &lt;li&gt;代码：程序代码&lt;/li&gt;
  &lt;li&gt;文档：个人，项目或者团队的活动中的内容&lt;/li&gt;
  &lt;li&gt;交互文档：混合了代码，图表和文档&lt;/li&gt;
  &lt;li&gt;文章：相对正式，常用wiki，blog等发布&lt;/li&gt;
&lt;/ul&gt;

&lt;blockquote&gt;
  &lt;p&gt;&lt;em&gt;一篇笔记，可以属于多个类别&lt;/em&gt;&lt;/p&gt;
&lt;/blockquote&gt;

&lt;hr /&gt;

&lt;h3 id=&quot;交互文档jupyter-notebook-zeppelin&quot;&gt;交互文档：jupyter notebook， zeppelin&lt;/h3&gt;

&lt;p&gt;学习Spark的时，接触了zeppelin，它采用scala和sql等语言编写代码，用markdown来编写文档。&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;image/ApacheZeppelin_02.jpg&quot; alt=&quot;Apache Zeppelin&quot; /&gt;&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;&lt;em&gt;&lt;a href=&quot;http://15.15.165.218:18888/notebooks/eipi10/xuxiangwen.github.io/base/model_evaluation.ipynb&quot;&gt;juputer notebook example&lt;/a&gt;&lt;/em&gt;&lt;/p&gt;
&lt;/blockquote&gt;

&lt;hr /&gt;

&lt;h2 id=&quot;什么是好笔记&quot;&gt;什么是好笔记&lt;/h2&gt;

&lt;ul&gt;
  &lt;li&gt;好理解： 好的笔记是容易理解的&lt;/li&gt;
  &lt;li&gt;易于复现：好的笔记，也应该是容易被重现的&lt;/li&gt;
  &lt;li&gt;持续更新&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;img src=&quot;image/1557704516822.png&quot; alt=&quot;1557704516822&quot; /&gt;&lt;/p&gt;

&lt;hr /&gt;

&lt;h2 id=&quot;笔记的安全性&quot;&gt;笔记的安全性&lt;/h2&gt;

&lt;p&gt;笔记发布的安全性非常重要。不同的笔记也有不同的发布范围。&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;Internet：&lt;/p&gt;

    &lt;ul&gt;
      &lt;li&gt;公开。没有安全性限制&lt;/li&gt;
      &lt;li&gt;私有。信息是私有的，但可以授权任意的人员来访问&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;hr /&gt;

&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;公司：仅在公司内部网络才可以访问。&lt;/p&gt;

    &lt;ul&gt;
      &lt;li&gt;公司/部门：信息在公司或部门内部是公开的&lt;/li&gt;
      &lt;li&gt;项目：信息在项目组内部是公开的&lt;/li&gt;
      &lt;li&gt;私有：信息是私有的，可以授权公司同事访问&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;hr /&gt;

&lt;h1 id=&quot;工具&quot;&gt;工具&lt;/h1&gt;

&lt;p&gt;任何工具的流行，离不开需求，也离不开合适的环境。&lt;/p&gt;

&lt;hr /&gt;

&lt;h2 id=&quot;历史&quot;&gt;历史&lt;/h2&gt;

&lt;p&gt;个人而言，使用的工具经历了以下的过程。&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;原始社会：文本文件，word，excel文件&lt;/li&gt;
  &lt;li&gt;工业时代：evernote， onenote， 有道云笔记&lt;/li&gt;
  &lt;li&gt;信息时代：zeppelin，jupyter notebook + 思维导图&lt;/li&gt;
  &lt;li&gt;互联时代：  github(pages, wiki) + typora(markdown) + pandoc …&lt;/li&gt;
&lt;/ul&gt;

&lt;blockquote&gt;
  &lt;p&gt;&lt;em&gt;以上这些工具，我们都会混合使用，没有一种工具可以解决所有的问题。&lt;/em&gt;&lt;/p&gt;
&lt;/blockquote&gt;

&lt;hr /&gt;

&lt;h3 id=&quot;原始社会文本文件wordexcel文件&quot;&gt;原始社会：文本文件，word，excel文件&lt;/h3&gt;

&lt;p&gt;文件分散在计算机的各处，时间长了，放在哪里都忘了，查找起来很不方便。&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;image/ximg_5b6e4770e6897.jpg.pagespeed.gp+jp+jw+pj+ws+js+rj+rp+rw+ri+cp+md.ic.tfq1D0waRx.jpg&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;hr /&gt;

&lt;h3 id=&quot;工业时代evernote-onenote-有道云笔记&quot;&gt;工业时代：evernote， onenote， 有道云笔记&lt;/h3&gt;

&lt;p&gt;&lt;img src=&quot;image/CNHome_Image1_v2.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;hr /&gt;

&lt;h3 id=&quot;信息时代zeppelinjupyter-notebook--思维导图&quot;&gt;信息时代：zeppelin，jupyter notebook + 思维导图&lt;/h3&gt;

&lt;p&gt;&lt;img src=&quot;image/jupyterpreview.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;hr /&gt;

&lt;h4 id=&quot;思维导图&quot;&gt;思维导图&lt;/h4&gt;

&lt;p&gt;思维导图，则另辟蹊径，是表达发散性思维的有效图形思维工具。&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;image/1557381669838.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;hr /&gt;

&lt;h3 id=&quot;互联时代--githubpages-wiki--typoramarkdown---pandoc-&quot;&gt;互联时代：  github(pages, wiki) + typora(markdown) +  pandoc …&lt;/h3&gt;

&lt;p&gt;面临的问题：&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;工具的强大，造成笔记太多，如何使笔记更有价值？&lt;/li&gt;
  &lt;li&gt;学习时记笔记，开发时写文档，分享时写ppt，如何用统一的方式来管理？&lt;/li&gt;
&lt;/ul&gt;

&lt;hr /&gt;

&lt;h4 id=&quot;分享&quot;&gt;分享&lt;/h4&gt;

&lt;p&gt;知识的根本目的和价值是分享。&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;image/pic1_0.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;&lt;em&gt;当需要分享知识的时候，往往会花上心思，这使得知识更易于理解，更加有价值。&lt;/em&gt;&lt;/p&gt;
&lt;/blockquote&gt;

&lt;hr /&gt;

&lt;h4 id=&quot;流程&quot;&gt;流程&lt;/h4&gt;

&lt;p&gt;&lt;img src=&quot;image/1557703072934.png&quot; alt=&quot;1557703072934&quot; /&gt;&lt;/p&gt;

&lt;hr /&gt;

&lt;pre&gt;&lt;code class=&quot;language-mermaid&quot;&gt;graph LR; 
    CE --&amp;gt; Git((Git));  
    Information--&amp;gt;|md|MDE[Markdown Editor: Typora];   
    Document--&amp;gt;|md|MDE;
    Article--&amp;gt;|md|MDE;    
    ID[Interactive Doc]--&amp;gt;NE[Notebook Editor: Jupyter];
    code --&amp;gt; CE(Code Editor);  
    MDE--&amp;gt;Others[ppt, pdf, word, html];
    NE--&amp;gt;Others;    
    MDE--&amp;gt; Git; 
    NE--&amp;gt; Git;
    Git--&amp;gt;GE[&quot;Github Enterprise(pages, wiki)&quot;];
    Git--&amp;gt;GitHub[&quot;Github(pages, wiki)&quot;];    
&lt;/code&gt;&lt;/pre&gt;

&lt;hr /&gt;

&lt;h4 id=&quot;github-pages&quot;&gt;&lt;a href=&quot;https://pages.github.com&quot;&gt;GitHub Pages&lt;/a&gt;&lt;/h4&gt;

&lt;p&gt;GitHub Pages is a static site hosting service designed to host your personal, organization, or project pages directly from a GitHub repository…&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;http://www.youtube.com/watch?v=2MsN8gpT6jY&quot; title=&quot;What is GitHub Pages?&quot;&gt;&lt;img src=&quot;http://img.youtube.com/vi/2MsN8gpT6jY/0.jpg&quot; alt=&quot;What is GitHub Pages?&quot; /&gt;&lt;/a&gt;&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;&lt;a href=&quot;https://github.com/showcases/github-pages-examples&quot;&gt;Projects using GitHub Pages&lt;/a&gt;
&lt;a href=&quot;https://github.com/showcases/open-source-organizations&quot;&gt;Open source organizations using GitHub Pages&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;

&lt;hr /&gt;

&lt;h4 id=&quot;github-wiki&quot;&gt;&lt;a href=&quot;https://help.github.com/en/articles/about-wikis&quot;&gt;GitHub Wiki&lt;/a&gt;&lt;/h4&gt;

&lt;p&gt;host documentation for your repository in a wiki.&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;&lt;a href=&quot;https://rndwiki.corp.hpicorp.net/confluence/display/DSCDC/Solution+Architecture&quot;&gt;confluence&lt;/a&gt;
&lt;a href=&quot;https://github.azc.ext.hp.com/jian-xu3/user-profile/wiki&quot;&gt;wechat user profile&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;

&lt;hr /&gt;

&lt;h2 id=&quot;github-pages-wiki的最大优势流量优势&quot;&gt;GitHub Pages, Wiki的最大优势：流量优势!&lt;/h2&gt;

&lt;hr /&gt;

&lt;h4 id=&quot;typora&quot;&gt;&lt;a href=&quot;https://typora.io/&quot;&gt;Typora&lt;/a&gt;&lt;/h4&gt;
&lt;p&gt;will give you a seamless experience as both a reader and a writer.&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;markdown&lt;/li&gt;
  &lt;li&gt;image enhanced&lt;/li&gt;
&lt;/ul&gt;

&lt;blockquote&gt;
  &lt;p&gt;&lt;a href=&quot;..\math\eigenvector-singular.md&quot;&gt;example eigenvector-singular.md&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;

&lt;hr /&gt;

&lt;h4 id=&quot;markdown&quot;&gt;Markdown&lt;/h4&gt;

&lt;p&gt;is a lightweight markup language with plain text formatting syntax. Its design allows it to be converted to many output formats&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;image/markdown.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;hr /&gt;

&lt;h4 id=&quot;markdown-vs-word&quot;&gt;Markdown vs. Word&lt;/h4&gt;

&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;内容与形式分离 vs 所见即所得（内容与形式融合）&lt;/p&gt;

    &lt;ul&gt;
      &lt;li&gt;专注内容书写：Markdown 胜&lt;/li&gt;
      &lt;li&gt;调整排版：Markdown 胜&lt;/li&gt;
      &lt;li&gt;文档发布和阅读：Markdown 胜&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;源码输入 vs 所见即所得&lt;/p&gt;

    &lt;ul&gt;
      &lt;li&gt;
        &lt;p&gt;严谨性：Markdown 胜&lt;/p&gt;
      &lt;/li&gt;
      &lt;li&gt;
        &lt;p&gt;功能：Word 胜&lt;/p&gt;

        &lt;ul&gt;
          &lt;li&gt;图片支持： Word 略胜&lt;/li&gt;
          &lt;li&gt;表格支持： Word 胜&lt;/li&gt;
        &lt;/ul&gt;
      &lt;/li&gt;
      &lt;li&gt;
        &lt;p&gt;显示和上手难度： Word 胜&lt;/p&gt;
      &lt;/li&gt;
      &lt;li&gt;
        &lt;p&gt;书写流畅性： Markdown 胜&lt;/p&gt;
      &lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;hr /&gt;

&lt;h4 id=&quot;pandoc&quot;&gt;Pandoc&lt;/h4&gt;

&lt;p&gt;Pandoc是一个标记语言转换工具，可实现不同标记语言间的&lt;a href=&quot;https://pandoc.org/diagram.jpg&quot;&gt;格式转换&lt;/a&gt;，堪称该领域中的“瑞士军刀”。&lt;/p&gt;

&lt;div class=&quot;language-shell highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;pandoc &lt;span class=&quot;nt&quot;&gt;-t&lt;/span&gt; revealjs &lt;span class=&quot;nt&quot;&gt;-s&lt;/span&gt; take_notes_ppt.md &lt;span class=&quot;se&quot;&gt;\&lt;/span&gt;
       &lt;span class=&quot;nt&quot;&gt;-o&lt;/span&gt; take_notes_ppt.html &lt;span class=&quot;se&quot;&gt;\&lt;/span&gt;
       &lt;span class=&quot;nt&quot;&gt;-V&lt;/span&gt; revealjs-url&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;https://revealjs.com &lt;span class=&quot;se&quot;&gt;\&lt;/span&gt;
       &lt;span class=&quot;nt&quot;&gt;-V&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;theme&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;moon
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;hr /&gt;

&lt;h2 id=&quot;工具的要求&quot;&gt;工具的要求&lt;/h2&gt;

&lt;p&gt;并不是对单一工具的，而是对于所用的工具集来说的。&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;简单易用&lt;/li&gt;
  &lt;li&gt;多种格式： 信息，文档，表格，代码，图表都能支持。&lt;/li&gt;
  &lt;li&gt;编辑方便。不方便的例子有jupyter notebook添加图片麻烦&lt;/li&gt;
  &lt;li&gt;快速检索。不好的例子有有道云笔记的搜索功能&lt;/li&gt;
  &lt;li&gt;易于分享。支持分享到项目，部门，公司或互联网。&lt;/li&gt;
&lt;/ul&gt;

&lt;hr /&gt;

&lt;h2 id=&quot;microsoft-teams--onenote-&quot;&gt;&lt;a href=&quot;https://teams.microsoft.com/l/team/19%3a129aaf7cba7a4aaaa63e3a0ba2d62974%40thread.skype/conversations?groupId=86e56ee6-d7c1-4577-8d2e-cc4a31e0eba9&amp;amp;tenantId=ca7981a2-785a-463d-b82a-3db87dfc3ce6&amp;gt;&quot;&gt;Microsoft Teams&lt;/a&gt; + OneNote …&lt;/h2&gt;

&lt;p&gt;&lt;img src=&quot;image/1557710385911.png&quot; alt=&quot;1557710385911&quot; /&gt;&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;&lt;a href=&quot;https://hp.sharepoint.com/sites/ChinaITBBS/_layouts/15/WopiFrame.aspx?sourcedoc={4a88b013-0cfe-47c7-8aad-44b814ce33dd}&amp;amp;action=editnew&quot;&gt;China IT  BBS OneNote&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;

&lt;hr /&gt;

&lt;h2 id=&quot;teams--onenote--vs-github--typora-&quot;&gt;teams + onenote … vs. github + typora …&lt;/h2&gt;

&lt;table&gt;
  &lt;thead&gt;
    &lt;tr&gt;
      &lt;th&gt;requirement&lt;/th&gt;
      &lt;th style=&quot;text-align: left&quot;&gt;teams&lt;/th&gt;
      &lt;th&gt;github&lt;/th&gt;
      &lt;th&gt;description&lt;/th&gt;
    &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;td&gt;简单易用&lt;/td&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;5&lt;/td&gt;
      &lt;td&gt;3&lt;/td&gt;
      &lt;td&gt;后者复杂的多&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;多种格式&lt;/td&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;4&lt;/td&gt;
      &lt;td&gt;4&lt;/td&gt;
      &lt;td&gt;前者对代码的支持不够好&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;编辑方便&lt;/td&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;5&lt;/td&gt;
      &lt;td&gt;4&lt;/td&gt;
      &lt;td&gt;前者功能强大，但后者善于精细化的控制&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;快速检索&lt;/td&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;4&lt;/td&gt;
      &lt;td&gt;5&lt;/td&gt;
      &lt;td&gt;由于纯文本和开放性，后者可以实现超强的搜索功能&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;易于分享&lt;/td&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;4&lt;/td&gt;
      &lt;td&gt;5&lt;/td&gt;
      &lt;td&gt;前者适合内部分享，后者无限制&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;

&lt;hr /&gt;

&lt;h2 id=&quot;teams--onenote--vs-github--typora--1&quot;&gt;teams + onenote … vs. github + typora …&lt;/h2&gt;

&lt;ul&gt;
  &lt;li&gt;总体上两套工具集合都很强大。
    &lt;ul&gt;
      &lt;li&gt;teams + onenote 简单易用，更加成熟&lt;/li&gt;
      &lt;li&gt;github + typora 开放自由，扩展性更好&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;对于程序员来说，github + typora 更有诱惑性。&lt;/li&gt;
&lt;/ul&gt;

&lt;hr /&gt;

&lt;h2 id=&quot;总结&quot;&gt;总结&lt;/h2&gt;

&lt;p&gt;无论使用任何工具，无论如何记笔记，只要让更多知识得到更好的分享，就能获得更大价值。&lt;/p&gt;

&lt;hr /&gt;

&lt;h2 id=&quot;参考&quot;&gt;参考&lt;/h2&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https://www.zhihu.com/question/21438053&quot;&gt;学习编程用什么做笔记比较好？&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://sspai.com/post/37340&quot;&gt;反思Markdown：Markdown的长与短&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://mazhuang.org/2017/09/01/markdown-odd-skills&quot;&gt;关于 Markdown 的一些奇技淫巧&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://zhuanlan.zhihu.com/p/44998516&quot;&gt;Typora - 不要太棒的Markdown编辑器&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://www.zybuluo.com/mdeditor&quot;&gt;Cmd Markdown 编辑阅读器&lt;/a&gt; : 在线Markdown编辑器。&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://pandoc.org/MANUAL.html#producing-slide-shows-with-pandoc&quot;&gt;Producing slide shows with pandoc&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://mermaidjs.github.io/mermaid-live-editor&quot;&gt;mermaid live editor&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://pages.github.com&quot;&gt;GitHub Pages&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;http://jmcglone.com/guides/github-pages&quot;&gt;Creating and Hosting a Personal Site on GitHub&lt;/a&gt;: 非常好的入门guide&lt;/li&gt;
&lt;/ul&gt;

&lt;hr /&gt;

&lt;h1 id=&quot;thank-you-smile&quot;&gt;Thank You :smile:&lt;/h1&gt;
&lt;h2 id=&quot;thank-you-smile-1&quot;&gt;Thank you :smile:&lt;/h2&gt;
&lt;h3 id=&quot;thank-you-smile-2&quot;&gt;Thank you :smile:&lt;/h3&gt;
&lt;h4 id=&quot;thank-you-smile-3&quot;&gt;Thank you :smile:&lt;/h4&gt;
&lt;h5 id=&quot;thank-you-smile-4&quot;&gt;Thank you :smile:&lt;/h5&gt;
&lt;h6 id=&quot;thank-you-smile-5&quot;&gt;Thank you :smile:&lt;/h6&gt;</content><author><name></name></author><summary type="html"></summary></entry><entry><title type="html">Default Title</title><link href="http://0.0.0.0:4000/2018/10/23/ruby.html" rel="alternate" type="text/html" title="Default Title" /><published>2018-10-23T00:00:00+08:00</published><updated>2018-10-23T00:00:00+08:00</updated><id>http://0.0.0.0:4000/2018/10/23/ruby</id><content type="html" xml:base="http://0.0.0.0:4000/2018/10/23/ruby.html">&lt;h2 id=&quot;ruby安装&quot;&gt;ruby安装&lt;/h2&gt;

&lt;p&gt;&lt;strong&gt;安装rbenv&lt;/strong&gt;&lt;/p&gt;

&lt;div class=&quot;language-shell highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;curl &lt;span class=&quot;nt&quot;&gt;-fsSL&lt;/span&gt; https://github.com/rbenv/rbenv-installer/raw/master/bin/rbenv-installer | bash
&lt;span class=&quot;nb&quot;&gt;echo&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'export PATH=&quot;$HOME/.rbenv/bin:$PATH&quot;'&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;gt;&amp;gt;&lt;/span&gt; ~/.bashrc
&lt;span class=&quot;nb&quot;&gt;echo eval&lt;/span&gt; &lt;span class=&quot;se&quot;&gt;\&quot;\$\(&lt;/span&gt;rbenv init -&lt;span class=&quot;se&quot;&gt;\)\&quot;&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;gt;&amp;gt;&lt;/span&gt;  ~/.bashrc
&lt;span class=&quot;nb&quot;&gt;source&lt;/span&gt; ~/.bashrc

rbenv &lt;span class=&quot;nt&quot;&gt;-v&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;&lt;strong&gt;安装ruby&lt;/strong&gt;&lt;/p&gt;

&lt;div class=&quot;language-shell highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nb&quot;&gt;sudo &lt;/span&gt;yum remove &lt;span class=&quot;nt&quot;&gt;-y&lt;/span&gt; ruby
&lt;span class=&quot;nb&quot;&gt;sudo &lt;/span&gt;yum &lt;span class=&quot;nb&quot;&gt;install&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;-y&lt;/span&gt; readline-devel
&lt;span class=&quot;nv&quot;&gt;ruby_file&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;~/.rbenv/cache/ruby-2.6.5.tar.bz2
&lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;[&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;!&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;-f&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$ruby_file&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;]&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;then
  &lt;/span&gt;wget &lt;span class=&quot;s1&quot;&gt;'https://cache.ruby-china.com/pub/ruby/2.6/ruby-2.6.5.tar.bz2'&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;-P&lt;/span&gt; ~/.rbenv/cache
&lt;span class=&quot;k&quot;&gt;fi
&lt;/span&gt;rbenv &lt;span class=&quot;nb&quot;&gt;install &lt;/span&gt;2.6.5
rbenv global 2.6.5
rbenv versions

ruby &lt;span class=&quot;nt&quot;&gt;-v&lt;/span&gt;

&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;&lt;strong&gt;检查安装&lt;/strong&gt;&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-SHELL&quot;&gt;curl -fsSL https://github.com/rbenv/rbenv-installer/raw/master/bin/rbenv-doctor | bash
ruby -v
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;如果输出如下信息，表示&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;image/1571194274287.png&quot; alt=&quot;1571194274287&quot; /&gt;&lt;/p&gt;

&lt;h2 id=&quot;进入interactive-ruby&quot;&gt;进入Interactive Ruby&lt;/h2&gt;

&lt;div class=&quot;language-ruby highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;n&quot;&gt;irb&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h2 id=&quot;入门&quot;&gt;入门&lt;/h2&gt;

&lt;h3 id=&quot;hello-world&quot;&gt;hello world*&lt;/h3&gt;

&lt;div class=&quot;language-ruby highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;s2&quot;&gt;&quot;Hello World&quot;&lt;/span&gt;
&lt;span class=&quot;nb&quot;&gt;puts&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;Hello World&quot;&lt;/span&gt;
&lt;span class=&quot;mi&quot;&gt;3&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;+&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;
&lt;span class=&quot;no&quot;&gt;Math&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;sqrt&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;9&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h3 id=&quot;函数&quot;&gt;函数&lt;/h3&gt;

&lt;div class=&quot;language-ruby highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;k&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;h&lt;/span&gt;
&lt;span class=&quot;nb&quot;&gt;puts&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;Hello World!&quot;&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;

&lt;span class=&quot;n&quot;&gt;h&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;h&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;

&lt;span class=&quot;k&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;h&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;nb&quot;&gt;puts&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;Hello &lt;/span&gt;&lt;span class=&quot;si&quot;&gt;#{&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;si&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;!&quot;&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;

&lt;span class=&quot;n&quot;&gt;h&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;Matz&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;

&lt;span class=&quot;k&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;h&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;name&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;world&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;nb&quot;&gt;puts&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;Hello &lt;/span&gt;&lt;span class=&quot;si&quot;&gt;#{&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;capitalize&lt;/span&gt;&lt;span class=&quot;si&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;!&quot;&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;

&lt;span class=&quot;n&quot;&gt;h&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;chris&quot;&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;h&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h3 id=&quot;类&quot;&gt;类&lt;/h3&gt;

&lt;div class=&quot;language-ruby highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;k&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;Greeter&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;initialize&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;name&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;World&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
    &lt;span class=&quot;vi&quot;&gt;@name&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;name&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;say_hi&lt;/span&gt;
    &lt;span class=&quot;nb&quot;&gt;puts&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;Hi &lt;/span&gt;&lt;span class=&quot;si&quot;&gt;#{&lt;/span&gt;&lt;span class=&quot;vi&quot;&gt;@name&lt;/span&gt;&lt;span class=&quot;si&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;!&quot;&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;say_bye&lt;/span&gt;
    &lt;span class=&quot;nb&quot;&gt;puts&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;Bye &lt;/span&gt;&lt;span class=&quot;si&quot;&gt;#{&lt;/span&gt;&lt;span class=&quot;vi&quot;&gt;@name&lt;/span&gt;&lt;span class=&quot;si&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;, come back soon.&quot;&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;

&lt;span class=&quot;n&quot;&gt;g&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;Greeter&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;new&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;Pat&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;g&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;say_hi&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;g&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;say_bye&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;g&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;vi&quot;&gt;@name&lt;/span&gt;      &lt;span class=&quot;c1&quot;&gt;# 无法访问&lt;/span&gt;

&lt;span class=&quot;c1&quot;&gt;# 显示实例函数&lt;/span&gt;
&lt;span class=&quot;no&quot;&gt;Greeter&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;instance_methods&lt;/span&gt;
&lt;span class=&quot;no&quot;&gt;Greeter&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;instance_methods&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kp&quot;&gt;false&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;

&lt;span class=&quot;n&quot;&gt;g&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;respond_to?&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;name&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;g&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;respond_to?&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;say_hi&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;g&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;respond_to?&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;to_s&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;获取实例变量名。在 Ruby 里，您可以把一个类打开然后改变它。这些改变会对以后生成的甚至是已经生成的对象产生即时效果。&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;class Greeter
  attr_accessor :name
end

g = Greeter.new(&quot;Andy&quot;)
g.respond_to?(&quot;name&quot;)
g.respond_to?(&quot;name=&quot;)
g.say_hi
g.name=&quot;Betty&quot;

g
Greeter.instance_methods(false)
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;更加完整的例子：&lt;/p&gt;

&lt;div class=&quot;language-ruby highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;n&quot;&gt;cat&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;lt;&amp;lt;&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;EOF&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;ri20min&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;rb&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;#!/usr/bin/env ruby&lt;/span&gt;

&lt;span class=&quot;k&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;MegaGreeter&lt;/span&gt;
  &lt;span class=&quot;nb&quot;&gt;attr_accessor&lt;/span&gt; &lt;span class=&quot;ss&quot;&gt;:names&lt;/span&gt;

  &lt;span class=&quot;c1&quot;&gt;# Create the object&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;initialize&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;names&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;World&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
    &lt;span class=&quot;vi&quot;&gt;@names&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;names&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;

  &lt;span class=&quot;c1&quot;&gt;# Say hi to everybody&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;say_hi&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;vi&quot;&gt;@names&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;nil?&lt;/span&gt;
      &lt;span class=&quot;nb&quot;&gt;puts&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;...&quot;&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;elsif&lt;/span&gt; &lt;span class=&quot;vi&quot;&gt;@names&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;respond_to?&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;each&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
      &lt;span class=&quot;c1&quot;&gt;# @names is a list of some kind, iterate!&lt;/span&gt;
      &lt;span class=&quot;vi&quot;&gt;@names&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;each&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;do&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;|&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;|&lt;/span&gt;
        &lt;span class=&quot;nb&quot;&gt;puts&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;Hello &lt;/span&gt;&lt;span class=&quot;si&quot;&gt;#{&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;si&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;!&quot;&lt;/span&gt;
      &lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;else&lt;/span&gt;
      &lt;span class=&quot;nb&quot;&gt;puts&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;Hello &lt;/span&gt;&lt;span class=&quot;si&quot;&gt;#{&lt;/span&gt;&lt;span class=&quot;vi&quot;&gt;@names&lt;/span&gt;&lt;span class=&quot;si&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;!&quot;&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;

  &lt;span class=&quot;c1&quot;&gt;# Say bye to everybody&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;say_bye&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;vi&quot;&gt;@names&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;nil?&lt;/span&gt;
      &lt;span class=&quot;nb&quot;&gt;puts&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;...&quot;&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;elsif&lt;/span&gt; &lt;span class=&quot;vi&quot;&gt;@names&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;respond_to?&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;join&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
      &lt;span class=&quot;c1&quot;&gt;# Join the list elements with commas&lt;/span&gt;
      &lt;span class=&quot;nb&quot;&gt;puts&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;Goodbye &lt;/span&gt;&lt;span class=&quot;si&quot;&gt;#{&lt;/span&gt;&lt;span class=&quot;vi&quot;&gt;@names&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;join&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;, &quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;si&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;.  Come back soon!&quot;&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;else&lt;/span&gt;
      &lt;span class=&quot;nb&quot;&gt;puts&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;Goodbye &lt;/span&gt;&lt;span class=&quot;si&quot;&gt;#{&lt;/span&gt;&lt;span class=&quot;vi&quot;&gt;@names&lt;/span&gt;&lt;span class=&quot;si&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;.  Come back soon!&quot;&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;

&lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;


&lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;kp&quot;&gt;__FILE__&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;==&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;\&lt;/span&gt;&lt;span class=&quot;vg&quot;&gt;$0&lt;/span&gt;
  &lt;span class=&quot;n&quot;&gt;mg&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;MegaGreeter&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;new&lt;/span&gt;
  &lt;span class=&quot;n&quot;&gt;mg&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;say_hi&lt;/span&gt;
  &lt;span class=&quot;n&quot;&gt;mg&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;say_bye&lt;/span&gt;

  &lt;span class=&quot;c1&quot;&gt;# Change name to be &quot;Zeke&quot;&lt;/span&gt;
  &lt;span class=&quot;n&quot;&gt;mg&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;names&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;Zeke&quot;&lt;/span&gt;
  &lt;span class=&quot;n&quot;&gt;mg&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;say_hi&lt;/span&gt;
  &lt;span class=&quot;n&quot;&gt;mg&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;say_bye&lt;/span&gt;

  &lt;span class=&quot;c1&quot;&gt;# Change the name to an array of names&lt;/span&gt;
  &lt;span class=&quot;n&quot;&gt;mg&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;names&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;Albert&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;Brenda&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;Charles&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
    &lt;span class=&quot;s2&quot;&gt;&quot;Dave&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;Engelbert&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;
  &lt;span class=&quot;n&quot;&gt;mg&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;say_hi&lt;/span&gt;
  &lt;span class=&quot;n&quot;&gt;mg&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;say_bye&lt;/span&gt;

  &lt;span class=&quot;c1&quot;&gt;# Change to nil&lt;/span&gt;
  &lt;span class=&quot;n&quot;&gt;mg&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;names&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;kp&quot;&gt;nil&lt;/span&gt;
  &lt;span class=&quot;n&quot;&gt;mg&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;say_hi&lt;/span&gt;
  &lt;span class=&quot;n&quot;&gt;mg&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;say_bye&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;

&lt;span class=&quot;no&quot;&gt;EOF&lt;/span&gt;

&lt;span class=&quot;n&quot;&gt;chmod&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;755&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;ri20min&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;rb&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;/&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;ri20min&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;rb&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h3 id=&quot;irb支持中文&quot;&gt;irb支持中文&lt;/h3&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;export LANG=en_US.UTF-8
irb
puts &quot;你好，世界！&quot;;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt; ruby -e 'puts Encoding.find(&quot;locale&quot;)'
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h3 id=&quot;here-document&quot;&gt;Here Document&lt;/h3&gt;

&lt;p&gt;“Here Document” 是指建立多行字符串。在 « 之后，您可以指定一个字符串或标识符来终止字符串，且当前行之后直到终止符为止的所有行是字符串的值。&lt;/p&gt;

&lt;p&gt;如果终止符用引号括起，引号的类型决定了面向行的字符串类型。请注意« 和终止符之间必须没有空格。&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;cat &amp;lt;&amp;lt; SEOF &amp;gt; here_document.rb
#!/usr/bin/env ruby
# -*- coding : utf-8 -*-
 
print &amp;lt;&amp;lt;EOF
    这是第一种方式创建here document 。
    多行字符串。
EOF
 
print &amp;lt;&amp;lt;&quot;EOF&quot;;                # 与上面相同
    这是第二种方式创建here document 。
    多行字符串。
EOF
 
print &amp;lt;&amp;lt;\`EOC\`                 # 执行命令
    echo hi there
    echo lo there
EOC
 
print &amp;lt;&amp;lt;&quot;foo&quot;, &amp;lt;&amp;lt;&quot;bar&quot;          # 您可以把它们进行堆叠
    I said foo.
foo
    I said bar.
bar

SEOF

chmod 755 here_document.rb
./here_document.rb
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h3 id=&quot;begin-end&quot;&gt;Begin End&lt;/h3&gt;

&lt;div class=&quot;language-ruby highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;n&quot;&gt;program&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;begin_end&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;rb&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;cat&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;lt;&amp;lt;&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;EOF&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;vg&quot;&gt;$program&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;#!/usr/bin/env ruby&lt;/span&gt;
&lt;span class=&quot;nb&quot;&gt;puts&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;这是主 Ruby 程序&quot;&lt;/span&gt;
 
&lt;span class=&quot;k&quot;&gt;END&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
   &lt;span class=&quot;nb&quot;&gt;puts&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;停止 Ruby 程序&quot;&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;BEGIN&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
   &lt;span class=&quot;nb&quot;&gt;puts&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;初始化 Ruby 程序&quot;&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;no&quot;&gt;EOF&lt;/span&gt;

&lt;span class=&quot;n&quot;&gt;chmod&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;755&lt;/span&gt; &lt;span class=&quot;vg&quot;&gt;$program&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;/&lt;/span&gt;&lt;span class=&quot;vg&quot;&gt;$program&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h3 id=&quot;集合&quot;&gt;集合&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;array&lt;/li&gt;
  &lt;li&gt;hash&lt;/li&gt;
&lt;/ul&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;program=collection.rb
cat &amp;lt;&amp;lt; EOF &amp;gt; $program
#!/usr/bin/env ruby

puts '----------------------------------'
ary = [ &quot;fred&quot;, 10, 3.14, &quot;This is a string&quot;, &quot;last element&quot;, ]
ary.each do |i|
    puts i
end

puts '----------------------------------'
hsh = colors = { &quot;red&quot; =&amp;gt; 0xf00, &quot;green&quot; =&amp;gt; 0x0f0, &quot;blue&quot; =&amp;gt; 0x00f }
hsh.each do |key, value|
    print key, &quot; is &quot;, value, &quot;\n&quot;
end

puts '----------------------------------'
(10..15).each do |n|
    print n, ' '
end
print &quot;\n&quot; 

puts '----------------------------------'
nums = Array.new(10) { |e| e = e * 2 }
puts &quot;#{nums}&quot;


puts '----------------------------------'
months = Hash.new( &quot;month&quot; )
 
puts &quot;#{months[0]}&quot;
puts &quot;#{months[72]}&quot;
puts months


EOF

chmod 755 $program
./$program
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h3 id=&quot;双引号和单引号区别&quot;&gt;双引号和单引号区别&lt;/h3&gt;

&lt;p&gt;双引号里面可以 interpolation 以及 escape 。单引号不可以。单引号字符串字面量里只可以用反斜线来转义单引号和反斜线。&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;a = 1
&quot;#{a}&quot;
'#{a}'
puts &quot;a\nb&quot;
puts 'a\nb'
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h3 id=&quot;变量&quot;&gt;变量&lt;/h3&gt;

&lt;p&gt;Ruby 支持五种类型的变量。&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;一般小写字母、下划线开头：变量（Variable）。&lt;/li&gt;
  &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;$&lt;/code&gt;开头：全局变量（Global variable）。&lt;/li&gt;
  &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;@&lt;/code&gt;开头：实例变量（Instance variable）。&lt;/li&gt;
  &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;@@&lt;/code&gt;开头：类变量（Class variable）类变量被共享在整个继承链中&lt;/li&gt;
  &lt;li&gt;大写字母开头：常数（Constant）。&lt;/li&gt;
&lt;/ul&gt;

&lt;div class=&quot;language-ruby highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;n&quot;&gt;program&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;variable&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;rb&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;cat&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;lt;&amp;lt;&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;EOF&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;vg&quot;&gt;$program&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;#!/usr/bin/env ruby&lt;/span&gt;

&lt;span class=&quot;p&quot;&gt;\&lt;/span&gt;&lt;span class=&quot;vg&quot;&gt;$global_variable&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;10&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;Class1&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;print_global&lt;/span&gt;
      &lt;span class=&quot;nb&quot;&gt;puts&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;全局变量在 Class1 中输出为 #&lt;/span&gt;&lt;span class=&quot;se&quot;&gt;\$&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;global_variable&quot;&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;Class2&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;print_global&lt;/span&gt;
      &lt;span class=&quot;nb&quot;&gt;puts&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;全局变量在 Class2 中输出为 #&lt;/span&gt;&lt;span class=&quot;se&quot;&gt;\$&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;global_variable&quot;&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;
 
&lt;span class=&quot;n&quot;&gt;class1obj&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;Class1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;new&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;class1obj&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;print_global&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;class2obj&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;Class2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;new&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;class2obj&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;print_global&lt;/span&gt;

&lt;span class=&quot;nb&quot;&gt;puts&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'----------------------------------------------'&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;Customer&lt;/span&gt;
   &lt;span class=&quot;k&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;initialize&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;id&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;addr&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
      &lt;span class=&quot;vi&quot;&gt;@cust_id&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;id&lt;/span&gt;
      &lt;span class=&quot;vi&quot;&gt;@cust_name&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;name&lt;/span&gt;
      &lt;span class=&quot;vi&quot;&gt;@cust_addr&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;addr&lt;/span&gt;
   &lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;
   &lt;span class=&quot;k&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;display_details&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;
      &lt;span class=&quot;nb&quot;&gt;puts&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;Customer id &lt;/span&gt;&lt;span class=&quot;si&quot;&gt;#@cust_id&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;&lt;/span&gt;
      &lt;span class=&quot;nb&quot;&gt;puts&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;Customer name &lt;/span&gt;&lt;span class=&quot;si&quot;&gt;#@cust_name&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;&lt;/span&gt;
      &lt;span class=&quot;nb&quot;&gt;puts&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;Customer address &lt;/span&gt;&lt;span class=&quot;si&quot;&gt;#@cust_addr&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;
 
&lt;span class=&quot;c1&quot;&gt;# 创建对象&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;cust1&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;no&quot;&gt;Customer&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;new&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;1&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;John&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;Wisdom Apartments, Ludhiya&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;cust2&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;no&quot;&gt;Customer&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;new&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;2&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;Poul&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;New Empire road, Khandala&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
 
&lt;span class=&quot;c1&quot;&gt;# 调用方法&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;cust1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;display_details&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;cust2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;display_details&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;

&lt;span class=&quot;nb&quot;&gt;puts&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'----------------------------------------------'&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;Customer&lt;/span&gt;
   &lt;span class=&quot;vc&quot;&gt;@@no_of_customers&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;
   &lt;span class=&quot;k&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;initialize&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;id&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;addr&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
      &lt;span class=&quot;vi&quot;&gt;@cust_id&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;id&lt;/span&gt;
      &lt;span class=&quot;vi&quot;&gt;@cust_name&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;name&lt;/span&gt;
      &lt;span class=&quot;vi&quot;&gt;@cust_addr&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;addr&lt;/span&gt;
   &lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;
   &lt;span class=&quot;k&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;display_details&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;
      &lt;span class=&quot;nb&quot;&gt;puts&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;Customer id &lt;/span&gt;&lt;span class=&quot;si&quot;&gt;#@cust_id&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;&lt;/span&gt;
      &lt;span class=&quot;nb&quot;&gt;puts&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;Customer name &lt;/span&gt;&lt;span class=&quot;si&quot;&gt;#@cust_name&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;&lt;/span&gt;
      &lt;span class=&quot;nb&quot;&gt;puts&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;Customer address &lt;/span&gt;&lt;span class=&quot;si&quot;&gt;#@cust_addr&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;total_no_of_customers&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;
       &lt;span class=&quot;vc&quot;&gt;@@no_of_customers&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;
       &lt;span class=&quot;nb&quot;&gt;puts&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;Total number of customers: &lt;/span&gt;&lt;span class=&quot;si&quot;&gt;#@@no_of_customers&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;
 
&lt;span class=&quot;c1&quot;&gt;# 创建对象&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;cust1&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;no&quot;&gt;Customer&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;new&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;1&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;John&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;Wisdom Apartments, Ludhiya&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;cust2&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;no&quot;&gt;Customer&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;new&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;2&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;Poul&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;New Empire road, Khandala&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
 
&lt;span class=&quot;c1&quot;&gt;# 调用方法&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;cust1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;total_no_of_customers&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;cust2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;total_no_of_customers&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;

&lt;span class=&quot;nb&quot;&gt;puts&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'----------------------------------------------'&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;Example&lt;/span&gt;
   &lt;span class=&quot;no&quot;&gt;VAR1&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;100&lt;/span&gt;
   &lt;span class=&quot;no&quot;&gt;VAR2&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;200&lt;/span&gt;
   &lt;span class=&quot;k&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;show&lt;/span&gt;
       &lt;span class=&quot;nb&quot;&gt;puts&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;第一个常量的值为 &lt;/span&gt;&lt;span class=&quot;si&quot;&gt;#{&lt;/span&gt;&lt;span class=&quot;no&quot;&gt;VAR1&lt;/span&gt;&lt;span class=&quot;si&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;&lt;/span&gt;
       &lt;span class=&quot;nb&quot;&gt;puts&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;第二个常量的值为 &lt;/span&gt;&lt;span class=&quot;si&quot;&gt;#{&lt;/span&gt;&lt;span class=&quot;no&quot;&gt;VAR2&lt;/span&gt;&lt;span class=&quot;si&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;&lt;/span&gt;
   &lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;
 
&lt;span class=&quot;c1&quot;&gt;# 创建对象&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;object&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;no&quot;&gt;Example&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;new&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;object&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;show&lt;/span&gt;

&lt;span class=&quot;no&quot;&gt;EOF&lt;/span&gt;

&lt;span class=&quot;n&quot;&gt;chmod&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;755&lt;/span&gt; &lt;span class=&quot;vg&quot;&gt;$program&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;/&lt;/span&gt;&lt;span class=&quot;vg&quot;&gt;$program&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;&lt;strong&gt;Ruby 伪变量&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;它们是特殊的变量，有着局部变量的外观，但行为却像常量。您不能给这些变量赋任何值。&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;strong&gt;self:&lt;/strong&gt; 当前方法的接收器对象。&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;true:&lt;/strong&gt; 代表 true 的值。&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;false:&lt;/strong&gt; 代表 false 的值。&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;nil:&lt;/strong&gt; 代表 undefined 的值。&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;__FILE__:&lt;/strong&gt; 当前源文件的名称。&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;__LINE__:&lt;/strong&gt; 当前行在源文件中的编号。&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;双冒号运算符-&quot;&gt;双冒号运算符 “::”&lt;/h3&gt;

&lt;p&gt;两个冒号 &lt;strong&gt;::&lt;/strong&gt; 来引用类或模块中的常量&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;MR_COUNT = 0        # 定义在主 Object 类上的常量
module Foo
  MR_COUNT = 0
  ::MR_COUNT = 1    # 设置全局计数为 1
  MR_COUNT = 2      # 设置局部计数为 2
end
puts MR_COUNT       # 这是全局常量
puts Foo::MR_COUNT  # 这是 &quot;Foo&quot; 的局部常量

CONST = ' out there'
class Inside_one
   CONST = proc {' in there'}
   def where_is_my_CONST
      ::CONST + ' inside one'
   end
end
class Inside_two
   CONST = ' inside two'
   def where_is_my_CONST
      CONST
   end
end
puts Inside_one.new.where_is_my_CONST
puts Inside_two.new.where_is_my_CONST
puts Object::CONST + Inside_two::CONST
puts Inside_two::CONST + CONST
puts Inside_one::CONST
puts Inside_one::CONST.call + Inside_two::CONST
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h3 id=&quot;多行注释&quot;&gt;多行注释&lt;/h3&gt;

&lt;p&gt;使用 &lt;strong&gt;=begin&lt;/strong&gt; 和 &lt;strong&gt;=end&lt;/strong&gt; 语法注释多行，如下所示：&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;program=comment.rb
cat &amp;lt;&amp;lt; EOF &amp;gt; $program
#!/usr/bin/env ruby

puts &quot;Hello, Ruby!&quot;
 
=begin
这是一个多行注释。
可扩展至任意数量的行。
但 =begin 和 =end 只能出现在第一行和最后一行。 
=end

EOF

chmod 755 $program
./$program
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h3 id=&quot;循环&quot;&gt;循环&lt;/h3&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;program=loop.rb
cat &amp;lt;&amp;lt; EOF &amp;gt; $program
#!/usr/bin/env ruby

puts '----------------------------------------------'
i = 0
num = 5
 
while i &amp;lt; num  do
   puts(&quot;在循环语句中 i = #{i}&quot; )
   i +=1
end

puts '----------------------------------------------'
\$i = 0
\$num = 5
begin
   puts(&quot;在循环语句中 i = #\$i&quot; )
   \$i +=1
end while \$i &amp;lt; \$num

puts '----------------------------------------------'
\$i = 0
\$num = 5
 
until \$i &amp;gt; \$num  do
   puts(&quot;在循环语句中 i = #\$i&quot; )
   \$i +=1;
end

puts '----------------------------------------------'
\$i = 0
\$num = 5
begin
   puts(&quot;在循环语句中 i = #\$i&quot; )
   \$i +=1;
end until \$i &amp;gt; \$num

puts '----------------------------------------------'
for i in 0..5
   puts &quot;局部变量的值为 #{i}&quot;
end

puts '----------------------------------------------'
(0..5).each do |i|
   puts &quot;局部变量的值为 #{i}&quot;
end

EOF

chmod 755 $program
./$program
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h3 id=&quot;块block&quot;&gt;块（block）&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;块由大量的代码组成。&lt;/li&gt;
  &lt;li&gt;您需要给块取个名称。&lt;/li&gt;
  &lt;li&gt;块中的代码总是包含在大括号 {} 内。&lt;/li&gt;
  &lt;li&gt;块总是从与其具有相同名称的函数调用。这意味着如果您的块名称为 &lt;em&gt;test&lt;/em&gt;，那么您要使用函数 &lt;em&gt;test&lt;/em&gt; 来调用这个块。&lt;/li&gt;
  &lt;li&gt;您可以使用 &lt;em&gt;yield&lt;/em&gt; 语句来调用块。&lt;/li&gt;
&lt;/ul&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;program=block.rb
cat &amp;lt;&amp;lt; EOF &amp;gt; $program
#!/usr/bin/env ruby

def test
   puts &quot;在 test 方法内&quot;
   yield
   puts &quot;你又回到了 test 方法内&quot;
   yield
end
test {puts &quot;你在块内&quot;}

puts '----------------------------------------------'
def test
   yield 5, 'five'
   puts &quot;在 test 方法内&quot;
   yield 100, 'one hundred'
end
test {|a, b| puts &quot;你在块 #{a} 内 #{b}&quot;}

puts '----------------------------------------------'
def test
  yield
end
test{ puts &quot;Hello world&quot;}

puts '----------------------------------------------'
def test(&amp;amp;block)
   block.call
end
test { puts &quot;Hello World!&quot;}

EOF

chmod 755 $program
./$program
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h3 id=&quot;模块module&quot;&gt;模块（Module）&lt;/h3&gt;

&lt;p&gt;模块（Module）是一种把方法、类和常量组合在一起的方式。模块（Module）为您提供了两大好处。&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;模块提供了一个&lt;em&gt;命名空间&lt;/em&gt;和避免名字冲突。&lt;/li&gt;
  &lt;li&gt;模块实现了 &lt;em&gt;mixin&lt;/em&gt; 装置。&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;模块（Module）定义了一个命名空间，相当于一个沙盒，在里边您的方法和常量不会与其他地方的方法常量冲突。&lt;/p&gt;

&lt;p&gt;模块类似与类，但有一下不同：&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;模块不能实例化&lt;/li&gt;
  &lt;li&gt;模块没有子类&lt;/li&gt;
  &lt;li&gt;模块只能被另一个模块定义&lt;/li&gt;
&lt;/ul&gt;

&lt;div class=&quot;language-ruby highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;n&quot;&gt;cat&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;lt;&amp;lt;&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;EOF&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;support&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;rb&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;module&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;Week&lt;/span&gt;
   &lt;span class=&quot;no&quot;&gt;FIRST_DAY&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;Sunday&quot;&lt;/span&gt;
   &lt;span class=&quot;k&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;Week&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;weeks_in_month&lt;/span&gt;
      &lt;span class=&quot;nb&quot;&gt;puts&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;You have four weeks in a month&quot;&lt;/span&gt;
   &lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;
   &lt;span class=&quot;k&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;Week&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;weeks_in_year&lt;/span&gt;
      &lt;span class=&quot;nb&quot;&gt;puts&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;You have 52 weeks in a year&quot;&lt;/span&gt;
   &lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;

&lt;span class=&quot;no&quot;&gt;EOF&lt;/span&gt;

&lt;span class=&quot;n&quot;&gt;program&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;module&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;rb&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;cat&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;lt;&amp;lt;&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;EOF&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;vg&quot;&gt;$program&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;#!/usr/bin/env ruby&lt;/span&gt;

&lt;span class=&quot;p&quot;&gt;\&lt;/span&gt;&lt;span class=&quot;vg&quot;&gt;$LOAD_PATH&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;lt;&amp;lt;&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'.'&lt;/span&gt;
&lt;span class=&quot;nb&quot;&gt;require&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;support&quot;&lt;/span&gt;
 
&lt;span class=&quot;k&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;Decade&lt;/span&gt;
&lt;span class=&quot;kp&quot;&gt;include&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;Week&lt;/span&gt;
   &lt;span class=&quot;n&quot;&gt;no_of_yrs&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;10&lt;/span&gt;
   &lt;span class=&quot;k&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;no_of_months&lt;/span&gt;
      &lt;span class=&quot;nb&quot;&gt;puts&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;Week&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;::&lt;/span&gt;&lt;span class=&quot;no&quot;&gt;FIRST_DAY&lt;/span&gt;
      &lt;span class=&quot;n&quot;&gt;number&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;10&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;12&lt;/span&gt;
      &lt;span class=&quot;nb&quot;&gt;puts&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;number&lt;/span&gt;
   &lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;d1&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;no&quot;&gt;Decade&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;new&lt;/span&gt;
&lt;span class=&quot;nb&quot;&gt;puts&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;Week&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;::&lt;/span&gt;&lt;span class=&quot;no&quot;&gt;FIRST_DAY&lt;/span&gt;
&lt;span class=&quot;no&quot;&gt;Week&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;weeks_in_month&lt;/span&gt;
&lt;span class=&quot;no&quot;&gt;Week&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;weeks_in_year&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;d1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;no_of_months&lt;/span&gt;

&lt;span class=&quot;no&quot;&gt;EOF&lt;/span&gt;


&lt;span class=&quot;n&quot;&gt;chmod&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;755&lt;/span&gt; &lt;span class=&quot;vg&quot;&gt;$program&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;/&lt;/span&gt;&lt;span class=&quot;vg&quot;&gt;$program&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h3 id=&quot;mixins&quot;&gt;Mixins&lt;/h3&gt;

&lt;p&gt;Ruby 不直接支持多重继承，但是 Ruby 的模块（Module）有另一个神奇的功能。它几乎消除了多重继承的需要，提供了一种名为 &lt;em&gt;mixin&lt;/em&gt; 的装置。&lt;/p&gt;

&lt;p&gt;Ruby 没有真正实现多重继承机制，而是采用成为mixin技术作为替代品。将模块include到类定义中，模块中的方法就mix进了类中。&lt;/p&gt;

&lt;p&gt;下面代码中：&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;模块 A 由方法 a1 和 a2 组成。&lt;/li&gt;
  &lt;li&gt;模块 B 由方法 b1 和 b2 组成。&lt;/li&gt;
  &lt;li&gt;类 Sample 包含了模块 A 和 B。&lt;/li&gt;
  &lt;li&gt;类 Sample 可以访问所有四个方法，即 a1、a2、b1 和 b2。&lt;/li&gt;
&lt;/ul&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;program=mixin.rb
cat &amp;lt;&amp;lt; EOF &amp;gt; $program
#!/usr/bin/env ruby

module A
   def a1
     puts &quot;a1&quot;
   end
   def a2
     puts &quot;a2&quot;   
   end
end
module B
   def b1
     puts &quot;b1&quot;   
   end
   def b2
     puts &quot;b2&quot;   
   end
end
 
class Sample
include A
include B
   def s1
     puts &quot;s1&quot;
   end
end
 
samp=Sample.new
samp.a1
samp.a2
samp.b1
samp.b2
samp.s1

EOF

chmod 755 $program
./$program
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h3 id=&quot;时间&quot;&gt;时间&lt;/h3&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;program=time.rb
cat &amp;lt;&amp;lt; EOF &amp;gt; $program
#!/usr/bin/env ruby

time1 = Time.new
 
puts &quot;当前时间 : &quot; + time1.inspect
 
# Time.now 功能相同
time2 = Time.now
puts &quot;当前时间 : &quot; + time2.inspect

puts '----------------------------------------------'
time = Time.new
 
# Time 的组件
puts &quot;当前时间 : &quot; + time.inspect
puts time.year    # =&amp;gt; 日期的年份
puts time.month   # =&amp;gt; 日期的月份（1 到 12）
puts time.day     # =&amp;gt; 一个月中的第几天（1 到 31）
puts time.wday    # =&amp;gt; 一周中的星期几（0 是星期日）
puts time.yday    # =&amp;gt; 365：一年中的第几天
puts time.hour    # =&amp;gt; 23：24 小时制
puts time.min     # =&amp;gt; 59
puts time.sec     # =&amp;gt; 59
puts time.usec    # =&amp;gt; 999999：微秒
puts time.zone    # =&amp;gt; &quot;UTC&quot;：时区名称

puts '----------------------------------------------'
# July 8, 2008
Time.local(2008, 7, 8)  
# July 8, 2008, 09:10am，本地时间
Time.local(2008, 7, 8, 9, 10)   
# July 8, 2008, 09:10 UTC
Time.utc(2008, 7, 8, 9, 10)  
# July 8, 2008, 09:10:11 GMT （与 UTC 相同）
Time.gm(2008, 7, 8, 9, 10, 11)

puts '----------------------------------------------'
time = Time.new
 
puts time.to_s
puts time.ctime
puts time.localtime
puts time.strftime(&quot;%Y-%m-%d %H:%M:%S&quot;)

puts '----------------------------------------------'
now = Time.now           # 当前时间
puts now
 
past = now - 10          # 10 秒之前。Time - number =&amp;gt; Time
puts past
 
future = now + 10        # 从现在开始 10 秒之后。Time + number =&amp;gt; Time
puts future
 
diff = future - now      # =&amp;gt; 10  Time - Time =&amp;gt; 秒数
puts diff

EOF

chmod 755 $program
./$program
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h3 id=&quot;范围range&quot;&gt;范围（Range）&lt;/h3&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;program=range.rb
cat &amp;lt;&amp;lt; EOF &amp;gt; $program
#!/usr/bin/env ruby

range1 = (1..10).to_a
range2 = ('bar'..'bat').to_a
puts &quot;#{range1}&quot;
puts &quot;#{range2}&quot;

puts '----------------------------------------------'
digits = 0..9
 
puts digits.include?(5)
ret = digits.min
puts &quot;最小值为 #{ret}&quot;
 
ret = digits.max
puts &quot;最大值为 #{ret}&quot;
 
ret = digits.reject {|i| i &amp;lt; 5 }
puts &quot;不符合条件的有 #{ret}&quot;
 
digits.each do |digit|
   puts &quot;在循环中 #{digit}&quot;
end

puts '----------------------------------------------'
score = 70
 
result = case score
when 0..40
    &quot;糟糕的分数&quot;
when 41..60
    &quot;快要及格&quot;
when 61..70
    &quot;及格分数&quot;
when 71..100
       &quot;良好分数&quot;
else
    &quot;错误的分数&quot;
end

puts result

puts '----------------------------------------------'
if ((1..10) === 5)
  puts &quot;5 在 (1..10)&quot;
end
 
if (('a'..'j') === 'c')
  puts &quot;c 在 ('a'..'j')&quot;
end
 
if (('a'..'j') === 'z')
  puts &quot;z 在 ('a'..'j')&quot;
end

EOF

chmod 755 $program
./$program
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h3 id=&quot;迭代器iterator&quot;&gt;迭代器（iterator）&lt;/h3&gt;

&lt;p&gt;迭代器（iterator）是&lt;em&gt;集合&lt;/em&gt;支持的方法。存储一组数据成员的对象称为集合。在这里我们将讨论两种迭代器，&lt;em&gt;each&lt;/em&gt; 和 &lt;em&gt;collect&lt;/em&gt;。&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;each： 迭代器返回数组或哈希的所有元素。&lt;/li&gt;
  &lt;li&gt;collect： 返回整个集合，不管它是数组或者是哈希。感觉类似map-reduce中的map。&lt;/li&gt;
&lt;/ul&gt;

&lt;div class=&quot;language-ruby highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;n&quot;&gt;program&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;iterator&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;rb&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;cat&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;lt;&amp;lt;&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;EOF&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;vg&quot;&gt;$program&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;#!/usr/bin/env ruby&lt;/span&gt;

&lt;span class=&quot;nb&quot;&gt;puts&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'----------------------------------------------'&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;ary&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;3&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;4&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;5&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;ary&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;each&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;do&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;|&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;i&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;|&lt;/span&gt;
   &lt;span class=&quot;nb&quot;&gt;puts&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;i&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;

&lt;span class=&quot;nb&quot;&gt;puts&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'----------------------------------------------'&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;a&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;3&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;4&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;5&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;b&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;Array&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;new&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;b&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;a&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;collect&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;|&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;x&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;|&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;x&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;nb&quot;&gt;puts&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;b&lt;/span&gt;

&lt;span class=&quot;nb&quot;&gt;puts&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'----------------------------------------------'&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;a&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;3&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;4&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;5&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;b&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;a&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;collect&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;|&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;x&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;|&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;10&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;x&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;nb&quot;&gt;puts&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;b&lt;/span&gt;

&lt;span class=&quot;no&quot;&gt;EOF&lt;/span&gt;

&lt;span class=&quot;n&quot;&gt;chmod&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;755&lt;/span&gt; &lt;span class=&quot;vg&quot;&gt;$program&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;/&lt;/span&gt;&lt;span class=&quot;vg&quot;&gt;$program&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h3 id=&quot;输入输出&quot;&gt;输入输出&lt;/h3&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;program=input_output.rb
cat &amp;lt;&amp;lt; EOF &amp;gt; $program
#!/usr/bin/env ruby

puts '----------------------------------------------'
val1 = &quot;This is variable one&quot;
val2 = &quot;This is variable two&quot;
puts val1
puts val2

puts '----------------------------------------------'
puts &quot;Enter a value :&quot;
val = gets
puts val

puts '----------------------------------------------'
# 与 puts 语句不同，puts 语句输出整个字符串到屏幕上，而 putc 语句可用于依次输出一个字符。
str=&quot;Hello Ruby!&quot;
putc str

puts '----------------------------------------------'
# print 语句与 puts 语句类似。唯一的不同在于 puts 语句在输出内容后会跳到下一行，而使用 print 语句时，光标定位在同一行。
print &quot;Hello World&quot;
print &quot;Good Morning&quot;


EOF

chmod 755 $program
./$program
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://www.cnblogs.com/yjmyzz/archive/2010/02/22/1671130.html&quot;&gt;puts,p,print的区别&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;puts 输出内容后，会自动换行(如果内容参数为空，则仅输出一个换行符号)；另外如果内容参数中有转义符，输出时将先处理转义再输出
p 基本与puts相同，但不会处理参数中的转义符号
print 基本与puts相同，但输出内容后，不会自动在结尾加上换行符&lt;/p&gt;

&lt;p&gt;另外，在输出双字节的字符，比如全角英文或汉字时，p会输出对应的二个字节对应的数字，而非字符&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;s = &quot;aaaa\nbb\tbb&quot;
p s
p &quot;****************&quot;
puts s
p &quot;****************&quot;
print s

s = &quot;中&quot;
 
p s
puts s
print s
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h3 id=&quot;文件操作&quot;&gt;文件操作&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;em&gt;File.new&lt;/em&gt; 方法创建一个 &lt;em&gt;File&lt;/em&gt; 对象用于读取、写入或者读写，读写权限取决于 mode 参数。最后，您可以使用 &lt;em&gt;File.close&lt;/em&gt; 方法来关闭该文件。&lt;/li&gt;
  &lt;li&gt;&lt;em&gt;File.open&lt;/em&gt; 方法创建一个新的 file 对象，并把该 file 对象赋值给文件。但是，&lt;em&gt;File.open&lt;/em&gt; 和 &lt;em&gt;File.new&lt;/em&gt; 方法之间有一点不同。不同点是 &lt;em&gt;File.open&lt;/em&gt; 方法可与块关联，而 &lt;em&gt;File.new&lt;/em&gt; 方法不能。&lt;/li&gt;
&lt;/ul&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;program=file.rb
cat &amp;lt;&amp;lt; EOF &amp;gt; $program
#!/usr/bin/env ruby

puts '----------------------------------------------'
aFile = File.new(&quot;input.txt&quot;, &quot;w+&quot;)
if aFile
   aFile.syswrite(&quot;ABCDEFGHIJKLKMNOPQ\nRSTUVW\nXYZ\n&quot;)
   aFile.rewind
   # 方法 each_byte 是个可以迭代字符串中每个字符
   aFile.each_byte {|ch| putc ch; putc ?. }   
else
   puts &quot;Unable to open file!&quot;
end
puts

puts '----------------------------------------------'
aFile = File.new(&quot;input.txt&quot;, &quot;r&quot;)
if aFile
   content = aFile.sysread(10)
   puts content
else
   puts &quot;Unable to open file!&quot;
end

puts '----------------------------------------------'
arr = IO.readlines(&quot;input.txt&quot;)
puts arr[0]
puts arr[1]

puts '----------------------------------------------'
IO.foreach(&quot;input.txt&quot;){|block| puts block}


EOF

chmod 755 $program
./$program
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h3 id=&quot;异常&quot;&gt;异常&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;使用 &lt;em&gt;rescue&lt;/em&gt; 块捕获异常，然后使用 &lt;em&gt;retry&lt;/em&gt; 语句从开头开始执行 &lt;em&gt;begin&lt;/em&gt; 块。&lt;/li&gt;
  &lt;li&gt;使用 &lt;em&gt;raise&lt;/em&gt; 语句抛出异常&lt;/li&gt;
  &lt;li&gt;使用 ensure语句，无论是否抛出异常，保证一些处理在代码块结束时完成&lt;/li&gt;
  &lt;li&gt;使用 &lt;em&gt;else&lt;/em&gt; 子句，表示如果没有异常则执行，它一般是放置在 &lt;em&gt;rescue&lt;/em&gt; 子句之后，任意 &lt;em&gt;ensure&lt;/em&gt; 之前。&lt;/li&gt;
&lt;/ul&gt;

&lt;div class=&quot;language-ruby highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;n&quot;&gt;program&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;exception&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;rb&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;cat&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;lt;&amp;lt;&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;EOF&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;vg&quot;&gt;$program&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;#!/usr/bin/env ruby&lt;/span&gt;

&lt;span class=&quot;nb&quot;&gt;puts&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'----------------------------------------------'&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;begin&lt;/span&gt;
   &lt;span class=&quot;n&quot;&gt;file&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;open&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;/unexistant_file&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
   &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;file&lt;/span&gt;
      &lt;span class=&quot;nb&quot;&gt;puts&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;File opened successfully&quot;&lt;/span&gt;
   &lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;rescue&lt;/span&gt;
      &lt;span class=&quot;n&quot;&gt;file&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;STDIN&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;
&lt;span class=&quot;nb&quot;&gt;print&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;file&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;==&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;STDIN&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;se&quot;&gt;\n&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;&lt;/span&gt;


&lt;span class=&quot;nb&quot;&gt;puts&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'----------------------------------------------'&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;fname&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;/unexistant_file&quot;&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;begin&lt;/span&gt;
   &lt;span class=&quot;n&quot;&gt;file&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;open&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;fname&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
   &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;file&lt;/span&gt;
      &lt;span class=&quot;nb&quot;&gt;puts&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;File opened successfully&quot;&lt;/span&gt;
   &lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;rescue&lt;/span&gt;
   &lt;span class=&quot;n&quot;&gt;fname&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;input.txt&quot;&lt;/span&gt;
   &lt;span class=&quot;nb&quot;&gt;puts&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'change file name'&lt;/span&gt;
   &lt;span class=&quot;k&quot;&gt;retry&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;


&lt;span class=&quot;nb&quot;&gt;puts&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'----------------------------------------------'&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;begin&lt;/span&gt;  
    &lt;span class=&quot;nb&quot;&gt;puts&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'I am before the raise.'&lt;/span&gt;  
    &lt;span class=&quot;k&quot;&gt;raise&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'An error has occurred.'&lt;/span&gt;  
    &lt;span class=&quot;nb&quot;&gt;puts&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'I am after the raise.'&lt;/span&gt;  
&lt;span class=&quot;k&quot;&gt;rescue&lt;/span&gt;  
    &lt;span class=&quot;nb&quot;&gt;puts&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'I am rescued.'&lt;/span&gt;  
&lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;  
&lt;span class=&quot;nb&quot;&gt;puts&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'I am after the begin block.'&lt;/span&gt;

&lt;span class=&quot;nb&quot;&gt;puts&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'----------------------------------------------'&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;begin&lt;/span&gt;  
  &lt;span class=&quot;k&quot;&gt;raise&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'A test exception.'&lt;/span&gt;  
&lt;span class=&quot;k&quot;&gt;rescue&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;Exception&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;e&lt;/span&gt;  
  &lt;span class=&quot;nb&quot;&gt;puts&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;e&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;message&lt;/span&gt;  
  &lt;span class=&quot;nb&quot;&gt;puts&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;e&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;backtrace&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;inspect&lt;/span&gt;  
&lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;

&lt;span class=&quot;nb&quot;&gt;puts&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'----------------------------------------------'&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;begin&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;raise&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'A test exception.'&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;rescue&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;Exception&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;e&lt;/span&gt;
  &lt;span class=&quot;nb&quot;&gt;puts&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;e&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;message&lt;/span&gt;
  &lt;span class=&quot;nb&quot;&gt;puts&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;e&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;backtrace&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;inspect&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;ensure&lt;/span&gt;
  &lt;span class=&quot;nb&quot;&gt;puts&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;Ensuring execution&quot;&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;

&lt;span class=&quot;nb&quot;&gt;puts&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'----------------------------------------------'&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;begin&lt;/span&gt;
 &lt;span class=&quot;c1&quot;&gt;# 抛出 'A test exception.'&lt;/span&gt;
 &lt;span class=&quot;nb&quot;&gt;puts&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;I'm not raising exception&quot;&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;rescue&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;Exception&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;e&lt;/span&gt;
  &lt;span class=&quot;nb&quot;&gt;puts&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;e&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;message&lt;/span&gt;
  &lt;span class=&quot;nb&quot;&gt;puts&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;e&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;backtrace&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;inspect&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;else&lt;/span&gt;
   &lt;span class=&quot;nb&quot;&gt;puts&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;Congratulations-- no errors!&quot;&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;ensure&lt;/span&gt;
  &lt;span class=&quot;nb&quot;&gt;puts&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;Ensuring execution&quot;&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;

&lt;span class=&quot;no&quot;&gt;EOF&lt;/span&gt;

&lt;span class=&quot;n&quot;&gt;chmod&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;755&lt;/span&gt; &lt;span class=&quot;vg&quot;&gt;$program&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;/&lt;/span&gt;&lt;span class=&quot;vg&quot;&gt;$program&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;&lt;strong&gt;Catch 和 Throw&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;raise 和 rescue 的异常机制能在发生错误时放弃执行，有时候需要在正常处理时跳出一些深层嵌套的结构。此时 catch 和 throw 就派上用场了。&lt;/p&gt;

&lt;p&gt;&lt;em&gt;catch&lt;/em&gt; 定义了一个使用给定的名称（可以是 Symbol 或 String）作为标签的块。块会正常执行直到遇到一个 throw。&lt;/p&gt;

&lt;p&gt;下面例子中，用户键入 ‘!’ 回应任何提示，使用一个 throw 终止与用户的交互。&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;program=try.rb
cat &amp;lt;&amp;lt; EOF &amp;gt; $program
#!/usr/bin/env ruby

def promptAndGet(prompt)
   print prompt
   res = readline.chomp
   throw :quitRequested if res == &quot;!&quot;
   return res
end
 
catch :quitRequested do
   name = promptAndGet(&quot;Name: &quot;)
   age = promptAndGet(&quot;Age: &quot;)
   sex = promptAndGet(&quot;Sex: &quot;)
   # ..
   # 处理信息
end



EOF

chmod 755 $program
./$program
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h2 id=&quot;参考&quot;&gt;参考&lt;/h2&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https://www.ruby-lang.org/zh_cn/documentation/quickstart/&quot;&gt;20 minutes quickstart&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://www.runoob.com/ruby/ruby-tutorial.html&quot;&gt;Ruby 教程&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;</content><author><name></name></author><summary type="html">ruby安装</summary></entry></feed>