geom_line()
n.df
99/2
x/2
99/2
99 \ 2
99 / 2
floor(99/2)
library(dplyr)
library(ggplot2)
nd <- function(x=100, sd) {
x <- seq(0, x)-floor(x/2)
prob <- dnorm(x, mean=0， sd=sd)
df <- data.frame(x=x, prob=prob, sd=sd)
return(df)
}
n.df <- plyr::mdply(data.frame(sd=seq(1, 10, 2)), nd)
n.df  %>% ggplot(aes(x, prob, group=sd, color=factor(sd))) +
geom_line()
library(dplyr)
library(ggplot2)
nd <- function(x=100, sd) {
x <- (seq(0, x)-floor(x/2))/2
prob <- dnorm(x, mean=0， sd=sd)
df <- data.frame(x=x, prob=prob, sd=sd)
return(df)
}
n.df <- plyr::mdply(data.frame(sd=seq(1, 10, 2)), nd)
n.df  %>% ggplot(aes(x, prob, group=sd, color=factor(sd))) +
geom_line()
library(dplyr)
library(ggplot2)
nd <- function(x=100, sd) {
x <- (seq(0, x)-floor(x/2))/3
prob <- dnorm(x, mean=0， sd=sd)
df <- data.frame(x=x, prob=prob, sd=sd)
return(df)
}
n.df <- plyr::mdply(data.frame(sd=seq(1, 10, 2)), nd)
n.df  %>% ggplot(aes(x, prob, group=sd, color=factor(sd))) +
geom_line()
library(dplyr)
library(ggplot2)
nd <- function(x=100, sd) {
x <- (seq(0, x)-floor(x/2))/10
prob <- dnorm(x, mean=0， sd=sd)
df <- data.frame(x=x, prob=prob, sd=sd)
return(df)
}
n.df <- plyr::mdply(data.frame(sd=seq(1, 5, 1)), nd)
n.df  %>% ggplot(aes(x, prob, group=sd, color=factor(sd))) +
geom_line()
library(dplyr)
library(ggplot2)
nd <- function(x=100, sd) {
x <- (seq(0, x)-floor(x/2))/5
prob <- dnorm(x, mean=0， sd=sd)
df <- data.frame(x=x, prob=prob, sd=sd)
return(df)
}
n.df <- plyr::mdply(data.frame(sd=seq(1, 5, 1)), nd)
n.df  %>% ggplot(aes(x, prob, group=sd, color=factor(sd))) +
geom_line()
library(dplyr)
library(ggplot2)
nd <- function(x=100, sd) {
x <- (seq(0, x)-floor(x/2))/5
prob <- dnorm(x, mean=0， sd=sd)
df <- data.frame(x=x, prob=prob, sd=sd)
return(df)
}
n.df <- plyr::mdply(data.frame(sd=c(1,2,3,4), nd)
n.df  %>% ggplot(aes(x, prob, group=sd, color=factor(sd))) +
geom_line()
n.df <- plyr::mdply(data.frame(sd=c(1,2,3,4), nd)
n.df  %>% ggplot(aes(x, prob, group=sd, color=factor(sd))) +
geom_line()
library(dplyr)
library(ggplot2)
nd <- function(x=100, sd) {
x <- (seq(0, x)-floor(x/2))/5
prob <- dnorm(x, mean=0， sd=sd)
df <- data.frame(x=x, prob=prob, sd=sd)
return(df)
}
n.df <- plyr::mdply(data.frame(sd=c(0.5, 1, 2, 3)), nd)
n.df  %>% ggplot(aes(x, prob, group=sd, color=factor(sd))) +
geom_line()
?seq
seq(0, 1, length.out = 11
)
seq(-9, 9, length.out = 19)
library(dplyr)
library(ggplot2)
nd <- function(n=100, sd) {
x <- seq(-9, 9, length.out = n+1)
prob <- dnorm(x, mean=0， sd=sd)
df <- data.frame(x=x, prob=prob, sd=sd)
return(df)
}
n.df <- plyr::mdply(data.frame(sd=c(0.5, 1, 2, 3)), nd)
n.df  %>% ggplot(aes(x, prob, group=sd, color=factor(sd))) +
geom_line()
library(dplyr)
library(ggplot2)
nd <- function(n=100, sd) {
x <- seq(-9, 9, length.out = n+1)
prob <- dnorm(x, mean=0， sd=sd)
df <- data.frame(x=x, prob=prob, sd=sd)
return(df)
}
n.df <- plyr::mdply(data.frame(sd=c(1, 1.5, 2, 2.5, 3)), nd)
n.df  %>% ggplot(aes(x, prob, group=sd, color=factor(sd))) +
geom_line()
library(dplyr)
library(ggplot2)
nd <- function(n=100, sd) {
x <- seq(-9, 9, length.out = n+1)
prob <- dnorm(x, mean=0， sd=sd)
df <- data.frame(x=x, prob=prob, sd=sd)
return(df)
}
n.df <- plyr::mdply(data.frame(sd=c(1, 1.5, 2, 2.5, 3)), nd)
n.df  %>% ggplot(aes(x, prob, group=sd, color=factor(sd))) +
geom_line() + scale_x_continuous(breaks=seq(-9, 9, 2))
n <- 100
# 实际分布
y1 <- rchisq(n, df=10)
y2 <- rnorm(n, mean=10, sd=5)
set.seed(2020)
n <- 10000
# 实际分布
y1 <- rchisq(n, df=10)
y2 <- rnorm(n, mean=10, sd=5)
shapiro.test(y1)
shapiro.test(y2)
set.seed(2020)
n <- 10000
# 实际分布
y1 <- rchisq(n, df=10)
y2 <- rnorm(n, mean=10, sd=5)
ks.test(y1，"pnorm", mean=mean(y1), sd=sd(y1))
ks.test(y2，"pnorm", mean=mean(y2), sd=sd(y2))
set.seed(2020)
n <- 100
# 实际分布
y1 <- rchisq(n, df=10)
y2 <- rnorm(n, mean=10, sd=5)
ks.test(y1，"pnorm", mean=mean(y1), sd=sd(y1))
ks.test(y2，"pnorm", mean=mean(y2), sd=sd(y2))
?lillie.test
library(nortest)
set.seed(30)
y <- tsibble(sample = 1:100, wn = rnorm(100), index = sample)
Box.test(y$wn, lag=log(length(y$wn)), type='Ljung')
library(fpp3)
set.seed(30)
y <- tsibble(sample = 1:100, wn = rnorm(100), index = sample)
Box.test(y$wn, lag=log(length(y$wn)), type='Ljung')
ks.test(y$wn，"pnorm", mean=mean(y$wn), sd=sd(y$wn))
shapiro.test(y$wn)
acf(dgoog$diff)
dgoog <- gafa_stock %>%
filter(Symbol == "GOOG", year(Date) >= 2018) %>%
mutate(trading_day = row_number()) %>%
update_tsibble(index = trading_day, regular = TRUE) %>%
mutate(diff = difference(Close))
dgoog
acf(dgoog$diff)
pacf(dgoog$diff)
acf(dgoog$diff)
dgoog$diff
acf(dgoog[-1,"diff"])
pacf(dgoog[-1,"diff"])
dgoog[-1,] %>% ACF(diff) %>% autoplot()
y %>% ACF(wn) %>% autlplot()
y %>% ACF(wn) %>% autoplot()
acf(y)
y %>% ACF(wn) %>% autoplot()
acf(y)
y %>% ACF(wn) %>% autoplot()
acf(y)
y %>% ACF(wn) %>% autoplot()
?acf
acf(lh)
acf(y)
y %>% ACF(wn)
y %>% PACF(wn)
acf(y$wn)
acf(y$wn, plot=False)
acf(y$wn, plot=F)
(y %>% ACF(wn))$acf
(y %>% ACF(wn))$pacf
(y %>% PACF(wn))$pacf
pacf(y$wn, plot=F)
(y %>% PACF(wn))
(y %>% PACF(wn))$pacf
pacf(y$wn, plot=F)
acf(y$wn)
acf(y$wn), plot-F
acf(y$wn), plot=F)
acf(y$wn, plot=F)
set.seed(30)
y <- tsibble(sample = 1:100, wn = rnorm(100), index = sample)
Box.test(y$wn, lag=log(length(y$wn)), type='Ljung')
y %>% PACF(wn) %>% autoplot()
y %>% ACF(wn) %>% autoplot()
y %>% ACF(wn) %>% autoplot()
y %>% PACF(wn) %>% autoplot()
y %>% ACF(wn) %>% autoplot()
dgoog[-1,] %>% PACF(diff) %>% autoplot()
dgoog[-1,] %>% autoplot(diff)
dgoog <- gafa_stock %>%
filter(Symbol == "GOOG", year(Date) >= 2018) %>%
mutate(trading_day = row_number()) %>%
update_tsibble(index = trading_day, regular = TRUE) %>%
mutate(diff = difference(Close))
dgoog <- dgoog[-1,]
Box.test(dgoog$diff, lag=log(length(dgoog$diff)), type='Ljung')
length(dgoog$diff)
qqnorm(dgoog$diff)
qqline(dgoog$diff, col=2, lwd=2)
ks.test(dgoog$diff，"pnorm", mean=mean(dgoog$diff),
sd=sd(dgoog$diff))
shapiro.test(dgoog$diff)
mean(dgoog$diff)
sd(dgoog$diff)
dgoog$diff
ks.test(unique(dgoog$diff)，"pnorm", mean=mean(dgoog$diff),
sd=sd(dgoog$diff))
length(unique(dgoog$diff))
len(dgoog$diff)
length(dgoog$diff)
qqnorm(dgoog$diff)
qqline(dgoog$diff, col=2, lwd=2)
ks.test(unique(dgoog$diff)，"pnorm", mean=mean(dgoog$diff),
sd=sd(dgoog$diff))
shapiro.test(dgoog$diff)
global_economy %>%
filter(Country == "Australia") %>%
autoplot(GDP / Population)
library(fpp3)
global_economy %>%
filter(Country == "Australia" | Country == "China") %>%
ggplot(aes(y = Trips, color=Country))
global_economy %>%
filter(Country == "Australia" | Country == "China")
unique((global_economy %>%
filter(Country == "Australia" | Country == "China") )$Country)
global_economy %>%
filter(Country == "Australia" | Country == "China") %>%
autoplot(GDP/Popluation)
global_economy %>%
filter(Country == "Australia" | Country == "China") %>%
autoplot(GDP/Population)
global_economy
global_economy %>%
filter(Country == "Australia" | Country == "China") %>%
autoplot(GDP)
unqiue(global_economy$Country)
unique(global_economy$Country)
global_economy %>%
filter(Country == "Australia" | Country == "China" | Country == "United States") %>%
autoplot(GDP/Population)
print_retail <- aus_retail %>%
filter(Industry == "Newspaper and book retailing") %>%
group_by(Industry) %>%
index_by(Year = year(Month)) %>%
summarise(Turnover = sum(Turnover))
print_retail
print_retail
print_retail <- aus_retail %>%
filter(Industry == "Newspaper and book retailing") %>%
group_by(Industry) %>%
index_by(Year = year(Month)) %>%
summarise(Turnover = sum(Turnover))
aus_economy <- global_economy %>%
filter(Code == "AUS")
print_retail %>%
left_join(aus_economy, by = "Year") %>%
mutate(Adjusted_turnover = Turnover / CPI) %>%
gather("Type", "Turnover", Turnover, Adjusted_turnover, factor_key = TRUE) %>%
ggplot(aes(x = Year, y = Turnover)) +
geom_line() +
facet_grid(vars(Type), scales = "free_y") +
xlab("Years") + ylab(NULL) +
ggtitle("Turnover for the Australian print media industry")
aus_economy
?gather
stocks <- tibble(
time = as.Date('2009-01-01') + 0:9,
X = rnorm(10, 0, 1),
Y = rnorm(10, 0, 2),
Z = rnorm(10, 0, 4)
)
stocks
gather(stocks, "stock", "price", -time)
stocks %>% gather("stock", "price", -time)
library(reshape2)	# 避免reshape被引入
ID <- c(1, 1, 2, 2)
Time <- c(1, 2, 1, 2)
X1 <- c(5, 3, 6, 2)
X2 <- c(6, 5, 1, 4)
mydata <- data.frame(ID, Time, X1, X2)
# 列转行
md <- melt(mydata, id=c("ID", "Time"))
md
# 行转列a, b, c
dcast(md, ID~variable, mean)
dcast(md, Time~variable, mean)
dcast(md, ID~Time, mean)
acast(md, ID~Time, mean)	# 行会转化为行的名称
# 行转列d, e, f
dcast(md, ID+Time~variable)
dcast(md, ID+variable~Time)
dcast(md, ID~variable+Time)
# 列转行
data2 <- gather(mydata, variable, value, X1，X2)
md <- gather(mydata, variable, value, X1，X2)
md
spread(md, category, value)
spread(md, variable, value)
mydata
acast(md, ID~Time, mean)
?spread
print_retail
print_retail
print_retail %>%
left_join(aus_economy, by = "Year") %>%
mutate(Adjusted_turnover = Turnover / CPI) %>%
gather("Type", "Turnover", Turnover, Adjusted_turnover, factor_key = TRUE)
print_retail %>%
left_join(aus_economy, by = "Year") %>%
mutate(Adjusted_turnover = Turnover / CPI) %>%
gather("Type", "Turnover", Turnover, Adjusted_turnover, factor_key = TRUE)
print_retail %>%
left_join(aus_economy, by = "Year") %>%
mutate(Adjusted_turnover = Turnover / CPI) %>%
gather("Type", "Turnover", Turnover, Adjusted_turnover, factor_key = TRUE)
?gather
print_retail %>%
left_join(aus_economy, by = "Year")
print_retail %>%
left_join(aus_economy, by = "Year")
print_retail %>%
left_join(aus_economy, by = "Year") %>%
mutate(Adjusted_turnover = Turnover / CPI)
library(MASS)
x = rf(500,30,30)
hist(x,breaks = 12)
result = boxcox(x~1, lambda = seq(-0.5,0,5))
mylambda = result$x[which.max(result$y)]
mylambda
x2 = (x^mylambda-1)/mylambda
hist(x2)
library(MASS)
x = rf(500,30,30)
hist(x,breaks = 12)
result = boxcox(x~1, lambda = seq(-0.5,0,5))
mylambda = result$x[which.max(result$y)]
mylambda
x2 = (x^mylambda-1)/mylambda
hist(x2)
?boxcox
result
result = boxcox(x~1）
mylambda = result$x[which.max(result$y)]
mylambda
x2 = (x^mylambda-1)/mylambda
hist(x2)
library(MASS)
set.seed(2020)
n <- 100
y <- sort(rchisq(n, df=10))
shapiro.test(y)
shapiro.test(y)
qqnorm(y)
qqline(y, col=2, lwd=2)
?boxcox
result = boxcox(y~1)
result
lambda = result$y[which.max(result$y)]
lambda
x2 = (x^lambda-1)/lambda
shapiro.test(y)
qqnorm(y)
qqline(y, col=2, lwd=2)
y = (y^lambda-1)/lambda
shapiro.test(y)
qqnorm(y)
qqline(y, col=2, lwd=2)
y
library(MASS)
set.seed(2020)
n <- 100
y <- sort(rchisq(n, df=10))
# 如下的验证结果表明y并不符合正态分布
shapiro.test(y)
qqnorm(y)
qqline(y, col=2, lwd=2)
result = boxcox(y~1)
lambda = result$y[which.max(result$y)]
lambda
y1 = (y^lambda-1)/lambda
y1
?boxcox
result = boxcox(y~1, lambda = seq(-2, 2, 1/10))
result
lambda = result$x[which.max(result$y)]
lambda
lambda
y1 = (y^lambda-1)/lambda
shapiro.test(y1)
qqnorm(y1)
qqline(y1, col=2, lwd=2)
library(MASS)
set.seed(2020)
n <- 100
y <- sort(rchisq(n, df=10))
# 如下的验证结果表明y并不符合正态分布
shapiro.test(y)
qqnorm(y)
qqline(y, col=2, lwd=2)
# box-cox变换
result = boxcox(y~1, lambda = seq(-2, 2, 1/10))
lambda = result$x[which.max(result$y)]
lambda
y1 = (y^lambda-1)/lambda
shapiro.test(y1)
qqnorm(y1)
qqline(y1, col=2, lwd=2)
lambda <- aus_production %>%
features(Gas, features = guerrero) %>%
pull(lambda_guerrero)
lambda
aus_production %>% autoplot(box_cox(Gas, lambda))
aus_production %>% autoplot(box_cox(Gas, lambda))
%>% geom_line(axes(y=Gas))
aus_production %>%
autoplot(box_cox(Gas, lambda)) %>%
geom_line(axes(y=Gas))
aus_production %>%
autoplot(box_cox(Gas, lambda)) %>%
geom_line(aes(y=Gas))
aus_production %>%
autoplot(box_cox(Gas, lambda)) %>%
geom_line(aes(y=Gas))
aus_production %>%
autoplot(box_cox(Gas, lambda)) %>%
geom_line(aes(Gas))
aus_production %>%
autoplot(box_cox(Gas, lambda)) +
geom_line(aes(Gas))
aus_production %>%
autoplot(box_cox(Gas, lambda)) +
geom_line(aes(Gas))
aus_production
aus_production %>%
autoplot(box_cox(Gas, lambda)) +
geom_line(aes(Quarter, Gas))
aus_production %>%
autoplot(box_cox(Gas, lambda)) +
geom_line(aes(Quarter, Gas, color="blue"))
aus_production %>%
autoplot(box_cox(Gas, lambda)) +
geom_line(aes(Quarter, Gas, color=2))
aus_production %>%
autoplot(box_cox(Gas, lambda))
aus_production %>%
autoplot(box_cox(Gas, lambda)) +
geom_line(aes(Quarter, Gas, color=2))
lambda <- aus_production %>%
features(Gas, features = guerrero) %>%
pull(lambda_guerrero)
shapiro.test(aus_production$Gas)
aus_production <- aus_production %>%
mutate(adjust_Gas=box_cox(Gas, lambda))
aus_production %>% autoplot(adjust_gas)
shapiro.test(aus_production$adjust_Gas)
aus_production <- aus_production %>%
mutate(adjust_Gas=box_cox(Gas, lambda))
aus_production %>% autoplot(adjust_Gas)
aus_production %>% autoplot(Gas)
shapiro.test(aus_production$Gas)
length9aus_production$Gas
length(aus_production$Gas)
aus_production %>% autoplot(adjust_Gas)
?Box.test
us_retail_employment <- us_employment %>%
filter(year(Month) >= 1990, Title == "Retail Trade") %>%
select(-Series_ID)
us_retail_employment %>%
autoplot(Employed) +
xlab("Year") + ylab("Persons (thousands)") +
ggtitle("Total employment in US retail")
library(fpp3)
us_retail_employment <- us_employment %>%
filter(year(Month) >= 1990, Title == "Retail Trade") %>%
select(-Series_ID)
us_retail_employment %>%
autoplot(Employed) +
xlab("Year") + ylab("Persons (thousands)") +
ggtitle("Total employment in US retail")
us_retail_employment <- us_employment %>%
filter(year(Month) >= 1990, Title == "Retail Trade") %>%
us_retail_employment <- us_employment %>%
filter(year(Month) >= 1990, Title == "Retail Trade")
us_retail_employment
us_retail_employment <- us_employment %>%
filter(year(Month) >= 1990, Title == "Retail Trade") %>%
select(-Series_ID)
?select
